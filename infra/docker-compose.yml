version: "3.8"

services:
  # Frontend Service
  frontend:
    build:
      context: ./frontend  # Path to the frontend directory
      dockerfile: Dockerfile  # Path to Dockerfile in the frontend directory
    ports:
      - "3000:3000"  # Exposes the frontend on port 3000 (you can adjust as necessary)
    environment:
      - REACT_APP_API_URL=http://backend:5000  # API URL to the backend service
    depends_on:
      - backend  # Ensures the backend is up before frontend starts
    networks:
      - mynetwork

  # Backend Service (Flask)
  backend:
    build:
      context: ./authentication-service  # Path to the backend directory
      dockerfile: Dockerfile  # Path to Dockerfile in the backend directory
    ports:
      - "5000:5000"  # Exposes the backend on port 5000 (you can adjust as necessary)
    environment:
      - FLASK_APP=app.py  # Replace with the entry file of your Flask app
      - FLASK_ENV=production  # Set the Flask environment (can be 'production' or 'development')
      - DATABASE_URL=postgres://user:password@postgres:5432/dbname  # Example DB URL for production
    depends_on:
      - postgres  # Ensure Postgres service is up before backend starts
    networks:
      - mynetwork

  # PostgreSQL Service (for Backend)
  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: dbname
    volumes:
      - ./postgres/data:/var/lib/postgresql/data  # Persist DB data
    networks:
      - mynetwork
    ports:
      - "5432:5432"

networks:
  mynetwork:
    driver: bridge
